<div class="container mt-4">
  <h2>Detalles del Carrito - {{cart.first_name}} {{cart.last_name}}</h2>
  <table class="table">
  <thead>
    <tr>
      <th>ID</th>
      <th>Título</th>
      <th>Descripción</th>
      <th>Precio</th>
      <th>Categoría</th>
      <th>Cantidad</th>
      <th>Eliminar producto</th>
    </tr>
  </thead>
  <tbody>
    {{#each cart.cartProducts}}
      <tr>
        <td>{{this.productId}}</td>
        <td>{{this.title}}</td>
        <td>{{this.description}}</td>
        <td>{{this.price}}</td>
        <td>{{this.category}}</td>
        <td>
          <input type="number" min="1" class="form-control qty-input" data-cart="{{../cart.id}}" data-product="{{this.productId}}" value="{{this.quantity}}">
        </td>
        <td>
          <button class="btn btn-danger delete-btn" data-cart="{{../cart.id}}" data-product="{{this.productId}}">Eliminar</button>
        </td>
      </tr>
    {{/each}}
  </tbody>
</table>
<button class="btn btn-danger mt-4" onclick="clearCart('{{cart.id}}')">Vaciar Carrito</button>

<script>
  // Actualizar cantidad de producto
  document.querySelectorAll('.qty-input').forEach(input => {
    input.addEventListener('change', function() {
      const newQty = this.value;
      const cartId = this.getAttribute('data-cart');
      const productId = this.getAttribute('data-product');

      if (newQty > 0) {
        updateQuantity(cartId, productId, newQty);
      } else {
        alert('La cantidad debe ser mayor que 0');
      }
    });
  });

  function updateQuantity(cartId, productId, newQty) {
    fetch(`/api/carts/${cartId}/product/${productId}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ quantity: parseInt(newQty) })
    })
    .then(response => response.json())
    .then(data => window.location.reload())
    .catch(error => alert('Error al actualizar la cantidad'));
  }

  // Eliminar producto del carrito
  document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', function() {
      const cartId = this.getAttribute('data-cart');
      const productId = this.getAttribute('data-product');

      if (confirm('¿Estás seguro de eliminar este producto del carrito?')) {
        fetch(`/api/carts/${cartId}/product/${productId}`, { method: 'DELETE' })
        .then(response => response.json())
        .then(() => window.location.reload())
        .catch(error => alert('Error al eliminar el producto'));
      }
    });
  });

  // Vaciar carrito
  function clearCart(cartId) {
    if (confirm('¿Estás seguro de vaciar este carrito?')) {
      fetch(`/api/carts/${cartId}`, { method: 'DELETE' })
      .then(() => window.location.reload())
      .catch(error => alert('Error al vaciar el carrito'));
    }
  }
</script>

