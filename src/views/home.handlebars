<div class="container mt-4">
  <h2>Lista de Productos</h2>

  <!-- Filtros y Ordenamiento -->
  <form method="GET" action="/products" id="filtersForm">
    <div class="row mb-3">
      <div class="col-md-3">
        <input type="text" name="query" class="form-control" placeholder="Buscar por categoría" value="{{query}}">
      </div>
      <div class="col-md-2">
        <select name="limit" class="form-select">
          <option value="5" {{#if limit}}selected{{/if}}>5 por página</option>
          <option value="10" {{#if limit}}selected{{/if}}>10 por página</option>
          <option value="20" {{#if limit}}selected{{/if}}>20 por página</option>
        </select>
      </div>
      <div class="col-md-2">
        <select name="sort" class="form-select">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if sort}}selected{{/if}}>Precio ascendente</option>
          <option value="desc" {{#if sort}}selected{{/if}}>Precio descendente</option>
        </select>
      </div>
      <div class="col-md-3">
        <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
      </div>
    </div>
  </form>

  <!-- Tabla de productos -->
  <table class="table" style="width:100%">
    <thead>
      <tr>
        <th>ID</th>
        <th>Título</th>
        <th>Descripción</th>
        <th>Precio</th>
        <th>Categoría</th>
        <th>Stock</th>
        {{#if user}}
          {{#if (eq user.role "user")}}
            <th>Agregar a Carrito</th>
          {{/if}}
          {{#if (eq user.role "admin")}}
            <th>Eliminar</th>
            <th>Actualizar</th>
          {{/if}}
        {{/if}}
      </tr>
    </thead>
    <tbody>
      <p>Cart ID del usuario: {{user.cart}}</p>
      {{#each products}}
        <tr>
          <td>{{this.id}}</td>
          <td>{{this.title}}</td>
          <td>{{this.description}}</td>
          <td>{{this.price}}</td>
          <td>{{this.category}}</td>
          <td>{{this.stock}}</td>
          {{#if ../user}}
            {{#if (eq ../user.role "user")}}
              <td><button class="btn btn-primary" onclick="addToCart('{{../user.cart}}', '{{{this.id}}}')">Agregar</button></td>
            {{/if}}
            {{#if (eq ../user.role "admin")}}
              <td><button class="btn btn-danger" onclick="deleteProduct('{{this.id}}')">Eliminar</button></td>
              <td><a href="/products/update/{{this.id}}" class="btn btn-warning">Actualizar</a></td>
            {{/if}}
          {{/if}}
        </tr>
      {{/each}}
    </tbody>
  </table>

  <!-- Paginación -->
  <nav>
    <ul class="pagination">
      {{#if hasPrevPage}}
        <li class="page-item">
          <a class="page-link" href="{{prevLink}}">Anterior</a>
        </li>
      {{else}}
        <li class="page-item disabled">
          <a class="page-link">Anterior</a>
        </li>
      {{/if}}

      {{#each pagination.pages}}
        {{#if this.isEllipsis}}
          <li class="page-item disabled"><span class="page-link">...</span></li>
        {{else if this.isCurrent}}
          <li class="page-item active"><span class="page-link">{{this.page}}</span></li>
        {{else}}
          <li class="page-item"><a class="page-link" href="{{this.link}}">{{this.page}}</a></li>
        {{/if}}
      {{/each}}

      {{#if hasNextPage}}
        <li class="page-item">
          <a class="page-link" href="{{nextLink}}">Siguiente</a>
        </li>
      {{else}}
        <li class="page-item disabled">
          <a class="page-link">Siguiente</a>
        </li>
      {{/if}}
    </ul>
  </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Agregar producto al carrito
    function addToCart(cartId, productId) {
      console.log("Cart ID recibido en addToCart:", cartId);
      console.log("Product ID recibido en addToCart:", productId);

      Swal.fire({
        title: 'Ingrese la cantidad',
        input: 'number',
        inputAttributes: { min: 1, step: 1 },
        showCancelButton: true,
        confirmButtonText: 'Agregar',
        cancelButtonText: 'Cancelar',
        inputValidator: (value) => {
          if (!value || value <= 0) {
            return 'Debe ingresar una cantidad válida';
          }
        }
      }).then((result) => {
        if (result.isConfirmed) {
          const qty = parseInt(result.value);
          console.log("Cantidad ingresada:", qty);

          fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ qty })
          })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              throw new Error(data.error);
            } else {
              Swal.fire({
                icon: 'success',
                title: 'Producto agregado',
                text: 'El producto se ha agregado correctamente al carrito.',
                confirmButtonText: 'Aceptar'
              });
              console.log("✅ Producto agregado correctamente al carrito.");
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: error.message,
              confirmButtonText: 'Aceptar'
            });
          });
        }
      });
    }


  function deleteProduct(productId) {
    if (confirm("¿Estás seguro de que deseas eliminar este producto?")) {
      fetch(`/api/products/${productId}`, { method: 'DELETE' })
      .then(response => response.ok ? window.location.reload() : Promise.reject('Error al eliminar el producto'))
      .catch(error => alert('Error al eliminar el producto'));
    }
  }
</script>
