<div class="container mt-4">
  <h2>Lista de Productos</h2>

  <!-- Filtros y Ordenamiento -->
  <form method="GET" action="/products" id="filtersForm">
    <div class="row mb-3">
      <div class="col-md-3">
        <input type="text" name="query" class="form-control" placeholder="Buscar por categoría" value="{{query}}">
      </div>
      <div class="col-md-2">
        <select name="limit" class="form-select">
          <option value="5" {{#if limit}}selected{{/if}}>5 por página</option>
          <option value="10" {{#if limit}}selected{{/if}}>10 por página</option>
          <option value="20" {{#if limit}}selected{{/if}}>20 por página</option>
        </select>
      </div>
      <div class="col-md-2">
        <select name="sort" class="form-select">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if sort}}selected{{/if}}>Precio ascendente</option>
          <option value="desc" {{#if sort}}selected{{/if}}>Precio descendente</option>
        </select>
      </div>
      <div class="col-md-3">
        <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
      </div>
    </div>
  </form>

  <!-- Tabla de productos -->
  <table class="table" style="width:100%">
    <thead>
      <tr>
        <th>ID</th>
        <th>Título</th>
        <th>Descripción</th>
        <th>Precio</th>
        <th>Categoría</th>
        <th>Stock</th>
        {{#if user}}
          {{#if (eq user.role "user")}}
            <th>Agregar a Carrito</th>
          {{/if}}
          {{#if (eq user.role "admin")}}
            <th>Eliminar</th>
            <th>Actualizar</th>
          {{/if}}
        {{/if}}
      </tr>
    </thead>
    <tbody>
      {{#each products}}
        <tr>
          <td>{{this.id}}</td>  <!-- 🔥 Ahora muestra el ID del producto -->
          <td>{{this.title}}</td>
          <td>{{this.description}}</td>
          <td>{{this.price}}</td>
          <td>{{this.category}}</td>
          <td>{{this.stock}}</td>
          {{#if ../user}}
            {{#if (eq ../user.role "user")}}
              <td><button class="btn btn-primary" onclick="addToCart('{{this.id}}')">Agregar</button></td>
            {{/if}}
            {{#if (eq ../user.role "admin")}}
              <td><button class="btn btn-danger" onclick="deleteProduct('{{this.id}}')">Eliminar</button></td>
              <td><a href="/products/update/{{this.id}}" class="btn btn-warning">Actualizar</a></td> <!-- 🔥 Corrección de la URL -->
            {{/if}}
          {{/if}}
        </tr>
      {{/each}}
    </tbody>
  </table>

  <!-- Paginación -->
  <nav>
    <ul class="pagination">
      {{#if hasPrevPage}}
        <li class="page-item">
          <a class="page-link" href="{{prevLink}}">Anterior</a>
        </li>
      {{else}}
        <li class="page-item disabled">
          <a class="page-link">Anterior</a>
        </li>
      {{/if}}

      {{#each pagination.pages}}
        {{#if this.isEllipsis}}
          <li class="page-item disabled"><span class="page-link">...</span></li>
        {{else if this.isCurrent}}
          <li class="page-item active"><span class="page-link">{{this.page}}</span></li>
        {{else}}
          <li class="page-item"><a class="page-link" href="{{this.link}}">{{this.page}}</a></li>
        {{/if}}
      {{/each}}

      {{#if hasNextPage}}
        <li class="page-item">
          <a class="page-link" href="{{nextLink}}">Siguiente</a>
        </li>
      {{else}}
        <li class="page-item disabled">
          <a class="page-link">Siguiente</a>
        </li>
      {{/if}}
    </ul>
  </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function addToCart(productId) {
    fetch('/api/carts/cart-ids')
      .then(response => response.json())
      .then(carts => {
        if (carts.length > 0) {
          let cartOptions = carts.map(cart => `<option value="${cart._id}">${cart._id}</option>`).join('');

          Swal.fire({
            title: 'Selecciona un carrito',
            html: `<select id="cartSelect" class="swal2-input">${cartOptions}</select>`,
            showCancelButton: true,
            confirmButtonText: 'Agregar al carrito',
            preConfirm: () => {
              const selectedCart = document.getElementById('cartSelect').value;
              return { cartId: selectedCart };
            }
          }).then(result => {
            if (result.isConfirmed) {
              const cartId = result.value.cartId;
              fetch(`/api/carts/${cartId}/product/${productId}`, { method: 'POST' })
                .then(response => response.ok ? Swal.fire('Producto agregado', '', 'success') : Swal.fire('Error', 'No se pudo agregar el producto al carrito', 'error'))
                .catch(error => Swal.fire('Error', 'Hubo un problema al agregar el producto al carrito', 'error'));
            }
          });
        } else {
          Swal.fire('Error', 'No se encontraron carritos', 'error');
        }
      })
      .catch(error => Swal.fire('Error', 'Hubo un problema al obtener los carritos', 'error'));
  }

  function deleteProduct(productId) {
    if (confirm("¿Estás seguro de que deseas eliminar este producto?")) {
      fetch(`/api/products/${productId}`, { method: 'DELETE' })
      .then(response => response.ok ? window.location.reload() : Promise.reject('Error al eliminar el producto'))
      .catch(error => alert('Error al eliminar el producto'));
    }
  }
</script>
